Terminals unused in grammar

   RESERVED


State 106 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: functions_and_declarations $end

    1 functions_and_declarations: functions_and_declarations_mandatory functions_and_declarations_none_or_more

    2 functions_and_declarations_mandatory: function_definition
    3                                     | function_declaration
    4                                     | declaration

    5 functions_and_declarations_none_or_more: functions_and_declarations_mandatory functions_and_declarations_none_or_more
    6                                        | %empty

    7 function_definition: type_spec function_declarator function_body

    8 function_body: LBRACE declarations_and_statements RBRACE
    9              | LBRACE RBRACE

   10 declarations_and_statements: statement declarations_and_statements
   11                            | declaration declarations_and_statements
   12                            | statement
   13                            | declaration

   14 function_declaration: type_spec function_declarator SEMI

   15 function_declarator: ID LPAR parameter_list RPAR

   16 parameter_list: parameter_declaration parameter_declaration_none_or_more

   17 parameter_declaration_none_or_more: COMMA parameter_declaration
   18                                   | %empty

   19 parameter_declaration: type_spec ID
   20                      | type_spec

   21 declaration: type_spec declarator declarator_none_or_more SEMI

   22 declarator_none_or_more: COMMA declarator
   23                        | %empty

   24 declarator: ID ASSIGN expr
   25           | ID

   26 type_spec: INT
   27          | CHAR
   28          | VOID
   29          | SHORT
   30          | DOUBLE

   31 statement: expr SEMI
   32          | SEMI
   33          | LBRACE statement_none_or_more RBRACE
   34          | IF LPAR expr RPAR statement ELSE statement
   35          | IF LPAR expr RPAR statement
   36          | WHILE LPAR expr RPAR statement
   37          | RETURN expr SEMI
   38          | RETURN SEMI

   39 statement_none_or_more: statement statement_none_or_more
   40                       | %empty

   41 expr: expr expr_assignments expr
   42     | expr expr_math expr
   43     | expr expr_logic expr
   44     | expr expr_compare expr
   45     | expr_modifier expr
   46     | ID LPAR RPAR
   47     | ID LPAR expr expr_arguments RPAR
   48     | expr_values

   49 expr_assignments: ASSIGN
   50                 | COMMA

   51 expr_math: PLUS
   52          | MINUS
   53          | MUL
   54          | DIV
   55          | MOD

   56 expr_logic: OR
   57           | AND
   58           | BITWISEAND
   59           | BITWISEOR
   60           | BITWISEXOR

   61 expr_compare: EQ
   62             | NE
   63             | LE
   64             | GE
   65             | LT
   66             | GT

   67 expr_modifier: PLUS
   68              | MINUS
   69              | NOT

   70 expr_arguments: COMMA expr expr_arguments
   71               | %empty

   72 expr_values: ID
   73            | INTLIT
   74            | CHRLIT
   75            | REALLIT
   76            | LPAR expr RPAR


Terminals, with rules where they appear

$end (0) 0
error (256)
REALLIT (258) 75
INTLIT (259) 73
CHRLIT (260) 74
CHAR (261) 27
ELSE (262) 34
WHILE (263) 36
IF (264) 34 35
INT (265) 26
SHORT (266) 29
DOUBLE (267) 30
RETURN (268) 37 38
VOID (269) 28
BITWISEAND (270) 58
BITWISEOR (271) 59
BITWISEXOR (272) 60
AND (273) 57
ASSIGN (274) 24 49
MUL (275) 53
COMMA (276) 17 22 50 70
DIV (277) 54
EQ (278) 61
GE (279) 64
GT (280) 66
LBRACE (281) 8 9 33
LE (282) 63
LPAR (283) 15 34 35 36 46 47 76
LT (284) 65
MINUS (285) 52 68
MOD (286) 55
NE (287) 62
NOT (288) 69
OR (289) 56
PLUS (290) 51 67
RBRACE (291) 8 9 33
RPAR (292) 15 34 35 36 46 47 76
SEMI (293) 14 21 31 32 37 38
RESERVED (294)
ID (295) 15 19 24 25 46 47 72
math_precedence (296)
modifier_precedence (297)
compare_precedence (298)
assign_precedence (299)
logic_precedence (300)
arguments_precedence (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
functions_and_declarations (48)
    on left: 1, on right: 0
functions_and_declarations_mandatory (49)
    on left: 2 3 4, on right: 1 5
functions_and_declarations_none_or_more (50)
    on left: 5 6, on right: 1 5
function_definition (51)
    on left: 7, on right: 2
function_body (52)
    on left: 8 9, on right: 7
declarations_and_statements (53)
    on left: 10 11 12 13, on right: 8 10 11
function_declaration (54)
    on left: 14, on right: 3
function_declarator (55)
    on left: 15, on right: 7 14
parameter_list (56)
    on left: 16, on right: 15
parameter_declaration_none_or_more (57)
    on left: 17 18, on right: 16
parameter_declaration (58)
    on left: 19 20, on right: 16 17
declaration (59)
    on left: 21, on right: 4 11 13
declarator_none_or_more (60)
    on left: 22 23, on right: 21
declarator (61)
    on left: 24 25, on right: 21 22
type_spec (62)
    on left: 26 27 28 29 30, on right: 7 14 19 20 21
statement (63)
    on left: 31 32 33 34 35 36 37 38, on right: 10 12 34 35 36 39
statement_none_or_more (64)
    on left: 39 40, on right: 33 39
expr (65)
    on left: 41 42 43 44 45 46 47 48, on right: 24 31 34 35 36 37 41
    42 43 44 45 47 70 76
expr_assignments (66)
    on left: 49 50, on right: 41
expr_math (67)
    on left: 51 52 53 54 55, on right: 42
expr_logic (68)
    on left: 56 57 58 59 60, on right: 43
expr_compare (69)
    on left: 61 62 63 64 65 66, on right: 44
expr_modifier (70)
    on left: 67 68 69, on right: 45
expr_arguments (71)
    on left: 70 71, on right: 47 70
expr_values (72)
    on left: 72 73 74 75 76, on right: 48


State 0

    0 $accept: . functions_and_declarations $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    functions_and_declarations            go to state 6
    functions_and_declarations_mandatory  go to state 7
    function_definition                   go to state 8
    function_declaration                  go to state 9
    declaration                           go to state 10
    type_spec                             go to state 11


State 1

   27 type_spec: CHAR .

    $default  reduce using rule 27 (type_spec)


State 2

   26 type_spec: INT .

    $default  reduce using rule 26 (type_spec)


State 3

   29 type_spec: SHORT .

    $default  reduce using rule 29 (type_spec)


State 4

   30 type_spec: DOUBLE .

    $default  reduce using rule 30 (type_spec)


State 5

   28 type_spec: VOID .

    $default  reduce using rule 28 (type_spec)


State 6

    0 $accept: functions_and_declarations . $end

    $end  shift, and go to state 12


State 7

    1 functions_and_declarations: functions_and_declarations_mandatory . functions_and_declarations_none_or_more

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 6 (functions_and_declarations_none_or_more)

    functions_and_declarations_mandatory     go to state 13
    functions_and_declarations_none_or_more  go to state 14
    function_definition                      go to state 8
    function_declaration                     go to state 9
    declaration                              go to state 10
    type_spec                                go to state 11


State 8

    2 functions_and_declarations_mandatory: function_definition .

    $default  reduce using rule 2 (functions_and_declarations_mandatory)


State 9

    3 functions_and_declarations_mandatory: function_declaration .

    $default  reduce using rule 3 (functions_and_declarations_mandatory)


State 10

    4 functions_and_declarations_mandatory: declaration .

    $default  reduce using rule 4 (functions_and_declarations_mandatory)


State 11

    7 function_definition: type_spec . function_declarator function_body
   14 function_declaration: type_spec . function_declarator SEMI
   21 declaration: type_spec . declarator declarator_none_or_more SEMI

    ID  shift, and go to state 15

    function_declarator  go to state 16
    declarator           go to state 17


State 12

    0 $accept: functions_and_declarations $end .

    $default  accept


State 13

    5 functions_and_declarations_none_or_more: functions_and_declarations_mandatory . functions_and_declarations_none_or_more

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 6 (functions_and_declarations_none_or_more)

    functions_and_declarations_mandatory     go to state 13
    functions_and_declarations_none_or_more  go to state 18
    function_definition                      go to state 8
    function_declaration                     go to state 9
    declaration                              go to state 10
    type_spec                                go to state 11


State 14

    1 functions_and_declarations: functions_and_declarations_mandatory functions_and_declarations_none_or_more .

    $default  reduce using rule 1 (functions_and_declarations)


State 15

   15 function_declarator: ID . LPAR parameter_list RPAR
   24 declarator: ID . ASSIGN expr
   25           | ID .

    ASSIGN  shift, and go to state 19
    LPAR    shift, and go to state 20

    $default  reduce using rule 25 (declarator)


State 16

    7 function_definition: type_spec function_declarator . function_body
   14 function_declaration: type_spec function_declarator . SEMI

    LBRACE  shift, and go to state 21
    SEMI    shift, and go to state 22

    function_body  go to state 23


State 17

   21 declaration: type_spec declarator . declarator_none_or_more SEMI

    COMMA  shift, and go to state 24

    $default  reduce using rule 23 (declarator_none_or_more)

    declarator_none_or_more  go to state 25


State 18

    5 functions_and_declarations_none_or_more: functions_and_declarations_mandatory functions_and_declarations_none_or_more .

    $default  reduce using rule 5 (functions_and_declarations_none_or_more)


State 19

   24 declarator: ID ASSIGN . expr

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    ID       shift, and go to state 33

    expr           go to state 34
    expr_modifier  go to state 35
    expr_values    go to state 36


State 20

   15 function_declarator: ID LPAR . parameter_list RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    parameter_list         go to state 37
    parameter_declaration  go to state 38
    type_spec              go to state 39


State 21

    8 function_body: LBRACE . declarations_and_statements RBRACE
    9              | LBRACE . RBRACE

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    CHAR     shift, and go to state 1
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    RBRACE   shift, and go to state 44
    SEMI     shift, and go to state 45
    ID       shift, and go to state 33

    declarations_and_statements  go to state 46
    declaration                  go to state 47
    type_spec                    go to state 48
    statement                    go to state 49
    expr                         go to state 50
    expr_modifier                go to state 35
    expr_values                  go to state 36


State 22

   14 function_declaration: type_spec function_declarator SEMI .

    $default  reduce using rule 14 (function_declaration)


State 23

    7 function_definition: type_spec function_declarator function_body .

    $default  reduce using rule 7 (function_definition)


State 24

   22 declarator_none_or_more: COMMA . declarator

    ID  shift, and go to state 51

    declarator  go to state 52


State 25

   21 declaration: type_spec declarator declarator_none_or_more . SEMI

    SEMI  shift, and go to state 53


State 26

   75 expr_values: REALLIT .

    $default  reduce using rule 75 (expr_values)


State 27

   73 expr_values: INTLIT .

    $default  reduce using rule 73 (expr_values)


State 28

   74 expr_values: CHRLIT .

    $default  reduce using rule 74 (expr_values)


State 29

   76 expr_values: LPAR . expr RPAR

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    ID       shift, and go to state 33

    expr           go to state 54
    expr_modifier  go to state 35
    expr_values    go to state 36


State 30

   68 expr_modifier: MINUS .

    $default  reduce using rule 68 (expr_modifier)


State 31

   69 expr_modifier: NOT .

    $default  reduce using rule 69 (expr_modifier)


State 32

   67 expr_modifier: PLUS .

    $default  reduce using rule 67 (expr_modifier)


State 33

   46 expr: ID . LPAR RPAR
   47     | ID . LPAR expr expr_arguments RPAR
   72 expr_values: ID .

    LPAR  shift, and go to state 55

    $default  reduce using rule 72 (expr_values)


State 34

   24 declarator: ID ASSIGN expr .
   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 24 (declarator)

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 35

   45 expr: expr_modifier . expr

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    ID       shift, and go to state 33

    expr           go to state 78
    expr_modifier  go to state 35
    expr_values    go to state 36


State 36

   48 expr: expr_values .

    $default  reduce using rule 48 (expr)


State 37

   15 function_declarator: ID LPAR parameter_list . RPAR

    RPAR  shift, and go to state 79


State 38

   16 parameter_list: parameter_declaration . parameter_declaration_none_or_more

    COMMA  shift, and go to state 80

    $default  reduce using rule 18 (parameter_declaration_none_or_more)

    parameter_declaration_none_or_more  go to state 81


State 39

   19 parameter_declaration: type_spec . ID
   20                      | type_spec .

    ID  shift, and go to state 82

    $default  reduce using rule 20 (parameter_declaration)


State 40

   36 statement: WHILE . LPAR expr RPAR statement

    LPAR  shift, and go to state 83


State 41

   34 statement: IF . LPAR expr RPAR statement ELSE statement
   35          | IF . LPAR expr RPAR statement

    LPAR  shift, and go to state 84


State 42

   37 statement: RETURN . expr SEMI
   38          | RETURN . SEMI

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    SEMI     shift, and go to state 85
    ID       shift, and go to state 33

    expr           go to state 86
    expr_modifier  go to state 35
    expr_values    go to state 36


State 43

   33 statement: LBRACE . statement_none_or_more RBRACE

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    SEMI     shift, and go to state 45
    ID       shift, and go to state 33

    $default  reduce using rule 40 (statement_none_or_more)

    statement               go to state 87
    statement_none_or_more  go to state 88
    expr                    go to state 50
    expr_modifier           go to state 35
    expr_values             go to state 36


State 44

    9 function_body: LBRACE RBRACE .

    $default  reduce using rule 9 (function_body)


State 45

   32 statement: SEMI .

    $default  reduce using rule 32 (statement)


State 46

    8 function_body: LBRACE declarations_and_statements . RBRACE

    RBRACE  shift, and go to state 89


State 47

   11 declarations_and_statements: declaration . declarations_and_statements
   13                            | declaration .

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    CHAR     shift, and go to state 1
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    SEMI     shift, and go to state 45
    ID       shift, and go to state 33

    $default  reduce using rule 13 (declarations_and_statements)

    declarations_and_statements  go to state 90
    declaration                  go to state 47
    type_spec                    go to state 48
    statement                    go to state 49
    expr                         go to state 50
    expr_modifier                go to state 35
    expr_values                  go to state 36


State 48

   21 declaration: type_spec . declarator declarator_none_or_more SEMI

    ID  shift, and go to state 51

    declarator  go to state 17


State 49

   10 declarations_and_statements: statement . declarations_and_statements
   12                            | statement .

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    CHAR     shift, and go to state 1
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 5
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    SEMI     shift, and go to state 45
    ID       shift, and go to state 33

    $default  reduce using rule 12 (declarations_and_statements)

    declarations_and_statements  go to state 91
    declaration                  go to state 47
    type_spec                    go to state 48
    statement                    go to state 49
    expr                         go to state 50
    expr_modifier                go to state 35
    expr_values                  go to state 36


State 50

   31 statement: expr . SEMI
   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    SEMI        shift, and go to state 92

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 51

   24 declarator: ID . ASSIGN expr
   25           | ID .

    ASSIGN  shift, and go to state 19

    $default  reduce using rule 25 (declarator)


State 52

   22 declarator_none_or_more: COMMA declarator .

    $default  reduce using rule 22 (declarator_none_or_more)


State 53

   21 declaration: type_spec declarator declarator_none_or_more SEMI .

    $default  reduce using rule 21 (declaration)


State 54

   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr
   76 expr_values: LPAR expr . RPAR

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    RPAR        shift, and go to state 93

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 55

   46 expr: ID LPAR . RPAR
   47     | ID LPAR . expr expr_arguments RPAR

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    RPAR     shift, and go to state 94
    ID       shift, and go to state 33

    expr           go to state 95
    expr_modifier  go to state 35
    expr_values    go to state 36


State 56

   58 expr_logic: BITWISEAND .

    $default  reduce using rule 58 (expr_logic)


State 57

   59 expr_logic: BITWISEOR .

    $default  reduce using rule 59 (expr_logic)


State 58

   60 expr_logic: BITWISEXOR .

    $default  reduce using rule 60 (expr_logic)


State 59

   57 expr_logic: AND .

    $default  reduce using rule 57 (expr_logic)


State 60

   49 expr_assignments: ASSIGN .

    $default  reduce using rule 49 (expr_assignments)


State 61

   53 expr_math: MUL .

    $default  reduce using rule 53 (expr_math)


State 62

   50 expr_assignments: COMMA .

    $default  reduce using rule 50 (expr_assignments)


State 63

   54 expr_math: DIV .

    $default  reduce using rule 54 (expr_math)


State 64

   61 expr_compare: EQ .

    $default  reduce using rule 61 (expr_compare)


State 65

   64 expr_compare: GE .

    $default  reduce using rule 64 (expr_compare)


State 66

   66 expr_compare: GT .

    $default  reduce using rule 66 (expr_compare)


State 67

   63 expr_compare: LE .

    $default  reduce using rule 63 (expr_compare)


State 68

   65 expr_compare: LT .

    $default  reduce using rule 65 (expr_compare)


State 69

   52 expr_math: MINUS .

    $default  reduce using rule 52 (expr_math)


State 70

   55 expr_math: MOD .

    $default  reduce using rule 55 (expr_math)


State 71

   62 expr_compare: NE .

    $default  reduce using rule 62 (expr_compare)


State 72

   56 expr_logic: OR .

    $default  reduce using rule 56 (expr_logic)


State 73

   51 expr_math: PLUS .

    $default  reduce using rule 51 (expr_math)


State 74

   41 expr: expr expr_assignments . expr

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    ID       shift, and go to state 33

    expr           go to state 96
    expr_modifier  go to state 35
    expr_values    go to state 36


State 75

   42 expr: expr expr_math . expr

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    ID       shift, and go to state 33

    expr           go to state 97
    expr_modifier  go to state 35
    expr_values    go to state 36


State 76

   43 expr: expr expr_logic . expr

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    ID       shift, and go to state 33

    expr           go to state 98
    expr_modifier  go to state 35
    expr_values    go to state 36


State 77

   44 expr: expr expr_compare . expr

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    ID       shift, and go to state 33

    expr           go to state 99
    expr_modifier  go to state 35
    expr_values    go to state 36


State 78

   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr
   45     | expr_modifier expr .

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 45 (expr)

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 79

   15 function_declarator: ID LPAR parameter_list RPAR .

    $default  reduce using rule 15 (function_declarator)


State 80

   17 parameter_declaration_none_or_more: COMMA . parameter_declaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    parameter_declaration  go to state 100
    type_spec              go to state 39


State 81

   16 parameter_list: parameter_declaration parameter_declaration_none_or_more .

    $default  reduce using rule 16 (parameter_list)


State 82

   19 parameter_declaration: type_spec ID .

    $default  reduce using rule 19 (parameter_declaration)


State 83

   36 statement: WHILE LPAR . expr RPAR statement

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    ID       shift, and go to state 33

    expr           go to state 101
    expr_modifier  go to state 35
    expr_values    go to state 36


State 84

   34 statement: IF LPAR . expr RPAR statement ELSE statement
   35          | IF LPAR . expr RPAR statement

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    ID       shift, and go to state 33

    expr           go to state 102
    expr_modifier  go to state 35
    expr_values    go to state 36


State 85

   38 statement: RETURN SEMI .

    $default  reduce using rule 38 (statement)


State 86

   37 statement: RETURN expr . SEMI
   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    SEMI        shift, and go to state 103

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 87

   39 statement_none_or_more: statement . statement_none_or_more

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    SEMI     shift, and go to state 45
    ID       shift, and go to state 33

    $default  reduce using rule 40 (statement_none_or_more)

    statement               go to state 87
    statement_none_or_more  go to state 104
    expr                    go to state 50
    expr_modifier           go to state 35
    expr_values             go to state 36


State 88

   33 statement: LBRACE statement_none_or_more . RBRACE

    RBRACE  shift, and go to state 105


State 89

    8 function_body: LBRACE declarations_and_statements RBRACE .

    $default  reduce using rule 8 (function_body)


State 90

   11 declarations_and_statements: declaration declarations_and_statements .

    $default  reduce using rule 11 (declarations_and_statements)


State 91

   10 declarations_and_statements: statement declarations_and_statements .

    $default  reduce using rule 10 (declarations_and_statements)


State 92

   31 statement: expr SEMI .

    $default  reduce using rule 31 (statement)


State 93

   76 expr_values: LPAR expr RPAR .

    $default  reduce using rule 76 (expr_values)


State 94

   46 expr: ID LPAR RPAR .

    $default  reduce using rule 46 (expr)


State 95

   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr
   47     | ID LPAR expr . expr_arguments RPAR

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 106
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 71 (expr_arguments)

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77
    expr_arguments    go to state 107


State 96

   41 expr: expr . expr_assignments expr
   41     | expr expr_assignments expr .
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 41 (expr)

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 97

   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   42     | expr expr_math expr .
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 42 (expr)

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 98

   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   43     | expr expr_logic expr .
   44     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 43 (expr)

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 99

   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr
   44     | expr expr_compare expr .

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 44 (expr)

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 100

   17 parameter_declaration_none_or_more: COMMA parameter_declaration .

    $default  reduce using rule 17 (parameter_declaration_none_or_more)


State 101

   36 statement: WHILE LPAR expr . RPAR statement
   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    RPAR        shift, and go to state 108

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 102

   34 statement: IF LPAR expr . RPAR statement ELSE statement
   35          | IF LPAR expr . RPAR statement
   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    RPAR        shift, and go to state 109

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77


State 103

   37 statement: RETURN expr SEMI .

    $default  reduce using rule 37 (statement)


State 104

   39 statement_none_or_more: statement statement_none_or_more .

    $default  reduce using rule 39 (statement_none_or_more)


State 105

   33 statement: LBRACE statement_none_or_more RBRACE .

    $default  reduce using rule 33 (statement)


State 106

   50 expr_assignments: COMMA .
   70 expr_arguments: COMMA . expr expr_arguments

    LPAR   shift, and go to state 29
    MINUS  shift, and go to state 30
    NOT    shift, and go to state 31
    PLUS   shift, and go to state 32
    ID     shift, and go to state 33

    ID        [reduce using rule 50 (expr_assignments)]
    $default  reduce using rule 50 (expr_assignments)

    expr           go to state 110
    expr_modifier  go to state 35
    expr_values    go to state 36


State 107

   47 expr: ID LPAR expr expr_arguments . RPAR

    RPAR  shift, and go to state 111


State 108

   36 statement: WHILE LPAR expr RPAR . statement

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    SEMI     shift, and go to state 45
    ID       shift, and go to state 33

    statement      go to state 112
    expr           go to state 50
    expr_modifier  go to state 35
    expr_values    go to state 36


State 109

   34 statement: IF LPAR expr RPAR . statement ELSE statement
   35          | IF LPAR expr RPAR . statement

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    SEMI     shift, and go to state 45
    ID       shift, and go to state 33

    statement      go to state 113
    expr           go to state 50
    expr_modifier  go to state 35
    expr_values    go to state 36


State 110

   41 expr: expr . expr_assignments expr
   42     | expr . expr_math expr
   43     | expr . expr_logic expr
   44     | expr . expr_compare expr
   70 expr_arguments: COMMA expr . expr_arguments

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 106
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 71 (expr_arguments)

    expr_assignments  go to state 74
    expr_math         go to state 75
    expr_logic        go to state 76
    expr_compare      go to state 77
    expr_arguments    go to state 114


State 111

   47 expr: ID LPAR expr expr_arguments RPAR .

    $default  reduce using rule 47 (expr)


State 112

   36 statement: WHILE LPAR expr RPAR statement .

    $default  reduce using rule 36 (statement)


State 113

   34 statement: IF LPAR expr RPAR statement . ELSE statement
   35          | IF LPAR expr RPAR statement .

    ELSE  shift, and go to state 115

    ELSE      [reduce using rule 35 (statement)]
    $default  reduce using rule 35 (statement)


State 114

   70 expr_arguments: COMMA expr expr_arguments .

    $default  reduce using rule 70 (expr_arguments)


State 115

   34 statement: IF LPAR expr RPAR statement ELSE . statement

    REALLIT  shift, and go to state 26
    INTLIT   shift, and go to state 27
    CHRLIT   shift, and go to state 28
    WHILE    shift, and go to state 40
    IF       shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 29
    MINUS    shift, and go to state 30
    NOT      shift, and go to state 31
    PLUS     shift, and go to state 32
    SEMI     shift, and go to state 45
    ID       shift, and go to state 33

    statement      go to state 116
    expr           go to state 50
    expr_modifier  go to state 35
    expr_values    go to state 36


State 116

   34 statement: IF LPAR expr RPAR statement ELSE statement .

    $default  reduce using rule 34 (statement)
