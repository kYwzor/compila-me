Terminals unused in grammar

   ELSE
   WHILE
   IF
   RETURN
   LBRACE
   RBRACE
   SEMI
   RESERVED


State 44 conflicts: 18 shift/reduce
State 48 conflicts: 18 shift/reduce
State 49 conflicts: 18 shift/reduce
State 50 conflicts: 18 shift/reduce
State 51 conflicts: 18 shift/reduce
State 52 conflicts: 8 shift/reduce


Grammar

    0 $accept: main $end

    1 main: typespec
    2     | expr

    3 typespec: INT
    4         | CHAR
    5         | VOID
    6         | SHORT
    7         | DOUBLE

    8 expr: expr expr_assignments expr
    9     | expr expr_math expr
   10     | expr expr_logic expr
   11     | expr expr_compare expr
   12     | expr_modifier expr
   13     | ID LPAR RPAR
   14     | ID LPAR expr expr_arguments RPAR
   15     | expr_values

   16 expr_assignments: ASSIGN
   17                 | COMMA

   18 expr_math: PLUS
   19          | MINUS
   20          | MUL
   21          | DIV
   22          | MOD

   23 expr_logic: OR
   24           | AND
   25           | BITWISEAND
   26           | BITWISEOR
   27           | BITWISEXOR

   28 expr_compare: EQ
   29             | NE
   30             | LE
   31             | GE
   32             | LT
   33             | GT

   34 expr_modifier: PLUS
   35              | MINUS
   36              | NOT

   37 expr_arguments: COMMA expr expr_arguments
   38               | %empty

   39 expr_values: ID
   40            | INTLIT
   41            | CHRLIT
   42            | REALLIT
   43            | LPAR expr RPAR


Terminals, with rules where they appear

$end (0) 0
error (256)
REALLIT (258) 42
INTLIT (259) 40
CHRLIT (260) 41
CHAR (261) 4
ELSE (262)
WHILE (263)
IF (264)
INT (265) 3
SHORT (266) 6
DOUBLE (267) 7
RETURN (268)
VOID (269) 5
BITWISEAND (270) 25
BITWISEOR (271) 26
BITWISEXOR (272) 27
AND (273) 24
ASSIGN (274) 16
MUL (275) 20
COMMA (276) 17 37
DIV (277) 21
EQ (278) 28
GE (279) 31
GT (280) 33
LBRACE (281)
LE (282) 30
LPAR (283) 13 14 43
LT (284) 32
MINUS (285) 19 35
MOD (286) 22
NE (287) 29
NOT (288) 36
OR (289) 23
PLUS (290) 18 34
RBRACE (291)
RPAR (292) 13 14 43
SEMI (293)
RESERVED (294)
ID (295) 13 14 39
LAST (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
main (43)
    on left: 1 2, on right: 0
typespec (44)
    on left: 3 4 5 6 7, on right: 1
expr (45)
    on left: 8 9 10 11 12 13 14 15, on right: 2 8 9 10 11 12 14 37
    43
expr_assignments (46)
    on left: 16 17, on right: 8
expr_math (47)
    on left: 18 19 20 21 22, on right: 9
expr_logic (48)
    on left: 23 24 25 26 27, on right: 10
expr_compare (49)
    on left: 28 29 30 31 32 33, on right: 11
expr_modifier (50)
    on left: 34 35 36, on right: 12
expr_arguments (51)
    on left: 37 38, on right: 14 37
expr_values (52)
    on left: 39 40 41 42 43, on right: 15


State 0

    0 $accept: . main $end

    REALLIT  shift, and go to state 1
    INTLIT   shift, and go to state 2
    CHRLIT   shift, and go to state 3
    CHAR     shift, and go to state 4
    INT      shift, and go to state 5
    SHORT    shift, and go to state 6
    DOUBLE   shift, and go to state 7
    VOID     shift, and go to state 8
    LPAR     shift, and go to state 9
    MINUS    shift, and go to state 10
    NOT      shift, and go to state 11
    PLUS     shift, and go to state 12
    ID       shift, and go to state 13

    main           go to state 14
    typespec       go to state 15
    expr           go to state 16
    expr_modifier  go to state 17
    expr_values    go to state 18


State 1

   42 expr_values: REALLIT .

    $default  reduce using rule 42 (expr_values)


State 2

   40 expr_values: INTLIT .

    $default  reduce using rule 40 (expr_values)


State 3

   41 expr_values: CHRLIT .

    $default  reduce using rule 41 (expr_values)


State 4

    4 typespec: CHAR .

    $default  reduce using rule 4 (typespec)


State 5

    3 typespec: INT .

    $default  reduce using rule 3 (typespec)


State 6

    6 typespec: SHORT .

    $default  reduce using rule 6 (typespec)


State 7

    7 typespec: DOUBLE .

    $default  reduce using rule 7 (typespec)


State 8

    5 typespec: VOID .

    $default  reduce using rule 5 (typespec)


State 9

   43 expr_values: LPAR . expr RPAR

    REALLIT  shift, and go to state 1
    INTLIT   shift, and go to state 2
    CHRLIT   shift, and go to state 3
    LPAR     shift, and go to state 9
    MINUS    shift, and go to state 10
    NOT      shift, and go to state 11
    PLUS     shift, and go to state 12
    ID       shift, and go to state 13

    expr           go to state 19
    expr_modifier  go to state 17
    expr_values    go to state 18


State 10

   35 expr_modifier: MINUS .

    $default  reduce using rule 35 (expr_modifier)


State 11

   36 expr_modifier: NOT .

    $default  reduce using rule 36 (expr_modifier)


State 12

   34 expr_modifier: PLUS .

    $default  reduce using rule 34 (expr_modifier)


State 13

   13 expr: ID . LPAR RPAR
   14     | ID . LPAR expr expr_arguments RPAR
   39 expr_values: ID .

    LPAR  shift, and go to state 20

    $default  reduce using rule 39 (expr_values)


State 14

    0 $accept: main . $end

    $end  shift, and go to state 21


State 15

    1 main: typespec .

    $default  reduce using rule 1 (main)


State 16

    2 main: expr .
    8 expr: expr . expr_assignments expr
    9     | expr . expr_math expr
   10     | expr . expr_logic expr
   11     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 22
    BITWISEOR   shift, and go to state 23
    BITWISEXOR  shift, and go to state 24
    AND         shift, and go to state 25
    ASSIGN      shift, and go to state 26
    MUL         shift, and go to state 27
    COMMA       shift, and go to state 28
    DIV         shift, and go to state 29
    EQ          shift, and go to state 30
    GE          shift, and go to state 31
    GT          shift, and go to state 32
    LE          shift, and go to state 33
    LT          shift, and go to state 34
    MINUS       shift, and go to state 35
    MOD         shift, and go to state 36
    NE          shift, and go to state 37
    OR          shift, and go to state 38
    PLUS        shift, and go to state 39

    $default  reduce using rule 2 (main)

    expr_assignments  go to state 40
    expr_math         go to state 41
    expr_logic        go to state 42
    expr_compare      go to state 43


State 17

   12 expr: expr_modifier . expr

    REALLIT  shift, and go to state 1
    INTLIT   shift, and go to state 2
    CHRLIT   shift, and go to state 3
    LPAR     shift, and go to state 9
    MINUS    shift, and go to state 10
    NOT      shift, and go to state 11
    PLUS     shift, and go to state 12
    ID       shift, and go to state 13

    expr           go to state 44
    expr_modifier  go to state 17
    expr_values    go to state 18


State 18

   15 expr: expr_values .

    $default  reduce using rule 15 (expr)


State 19

    8 expr: expr . expr_assignments expr
    9     | expr . expr_math expr
   10     | expr . expr_logic expr
   11     | expr . expr_compare expr
   43 expr_values: LPAR expr . RPAR

    BITWISEAND  shift, and go to state 22
    BITWISEOR   shift, and go to state 23
    BITWISEXOR  shift, and go to state 24
    AND         shift, and go to state 25
    ASSIGN      shift, and go to state 26
    MUL         shift, and go to state 27
    COMMA       shift, and go to state 28
    DIV         shift, and go to state 29
    EQ          shift, and go to state 30
    GE          shift, and go to state 31
    GT          shift, and go to state 32
    LE          shift, and go to state 33
    LT          shift, and go to state 34
    MINUS       shift, and go to state 35
    MOD         shift, and go to state 36
    NE          shift, and go to state 37
    OR          shift, and go to state 38
    PLUS        shift, and go to state 39
    RPAR        shift, and go to state 45

    expr_assignments  go to state 40
    expr_math         go to state 41
    expr_logic        go to state 42
    expr_compare      go to state 43


State 20

   13 expr: ID LPAR . RPAR
   14     | ID LPAR . expr expr_arguments RPAR

    REALLIT  shift, and go to state 1
    INTLIT   shift, and go to state 2
    CHRLIT   shift, and go to state 3
    LPAR     shift, and go to state 9
    MINUS    shift, and go to state 10
    NOT      shift, and go to state 11
    PLUS     shift, and go to state 12
    RPAR     shift, and go to state 46
    ID       shift, and go to state 13

    expr           go to state 47
    expr_modifier  go to state 17
    expr_values    go to state 18


State 21

    0 $accept: main $end .

    $default  accept


State 22

   25 expr_logic: BITWISEAND .

    $default  reduce using rule 25 (expr_logic)


State 23

   26 expr_logic: BITWISEOR .

    $default  reduce using rule 26 (expr_logic)


State 24

   27 expr_logic: BITWISEXOR .

    $default  reduce using rule 27 (expr_logic)


State 25

   24 expr_logic: AND .

    $default  reduce using rule 24 (expr_logic)


State 26

   16 expr_assignments: ASSIGN .

    $default  reduce using rule 16 (expr_assignments)


State 27

   20 expr_math: MUL .

    $default  reduce using rule 20 (expr_math)


State 28

   17 expr_assignments: COMMA .

    $default  reduce using rule 17 (expr_assignments)


State 29

   21 expr_math: DIV .

    $default  reduce using rule 21 (expr_math)


State 30

   28 expr_compare: EQ .

    $default  reduce using rule 28 (expr_compare)


State 31

   31 expr_compare: GE .

    $default  reduce using rule 31 (expr_compare)


State 32

   33 expr_compare: GT .

    $default  reduce using rule 33 (expr_compare)


State 33

   30 expr_compare: LE .

    $default  reduce using rule 30 (expr_compare)


State 34

   32 expr_compare: LT .

    $default  reduce using rule 32 (expr_compare)


State 35

   19 expr_math: MINUS .

    $default  reduce using rule 19 (expr_math)


State 36

   22 expr_math: MOD .

    $default  reduce using rule 22 (expr_math)


State 37

   29 expr_compare: NE .

    $default  reduce using rule 29 (expr_compare)


State 38

   23 expr_logic: OR .

    $default  reduce using rule 23 (expr_logic)


State 39

   18 expr_math: PLUS .

    $default  reduce using rule 18 (expr_math)


State 40

    8 expr: expr expr_assignments . expr

    REALLIT  shift, and go to state 1
    INTLIT   shift, and go to state 2
    CHRLIT   shift, and go to state 3
    LPAR     shift, and go to state 9
    MINUS    shift, and go to state 10
    NOT      shift, and go to state 11
    PLUS     shift, and go to state 12
    ID       shift, and go to state 13

    expr           go to state 48
    expr_modifier  go to state 17
    expr_values    go to state 18


State 41

    9 expr: expr expr_math . expr

    REALLIT  shift, and go to state 1
    INTLIT   shift, and go to state 2
    CHRLIT   shift, and go to state 3
    LPAR     shift, and go to state 9
    MINUS    shift, and go to state 10
    NOT      shift, and go to state 11
    PLUS     shift, and go to state 12
    ID       shift, and go to state 13

    expr           go to state 49
    expr_modifier  go to state 17
    expr_values    go to state 18


State 42

   10 expr: expr expr_logic . expr

    REALLIT  shift, and go to state 1
    INTLIT   shift, and go to state 2
    CHRLIT   shift, and go to state 3
    LPAR     shift, and go to state 9
    MINUS    shift, and go to state 10
    NOT      shift, and go to state 11
    PLUS     shift, and go to state 12
    ID       shift, and go to state 13

    expr           go to state 50
    expr_modifier  go to state 17
    expr_values    go to state 18


State 43

   11 expr: expr expr_compare . expr

    REALLIT  shift, and go to state 1
    INTLIT   shift, and go to state 2
    CHRLIT   shift, and go to state 3
    LPAR     shift, and go to state 9
    MINUS    shift, and go to state 10
    NOT      shift, and go to state 11
    PLUS     shift, and go to state 12
    ID       shift, and go to state 13

    expr           go to state 51
    expr_modifier  go to state 17
    expr_values    go to state 18


State 44

    8 expr: expr . expr_assignments expr
    9     | expr . expr_math expr
   10     | expr . expr_logic expr
   11     | expr . expr_compare expr
   12     | expr_modifier expr .

    BITWISEAND  shift, and go to state 22
    BITWISEOR   shift, and go to state 23
    BITWISEXOR  shift, and go to state 24
    AND         shift, and go to state 25
    ASSIGN      shift, and go to state 26
    MUL         shift, and go to state 27
    COMMA       shift, and go to state 28
    DIV         shift, and go to state 29
    EQ          shift, and go to state 30
    GE          shift, and go to state 31
    GT          shift, and go to state 32
    LE          shift, and go to state 33
    LT          shift, and go to state 34
    MINUS       shift, and go to state 35
    MOD         shift, and go to state 36
    NE          shift, and go to state 37
    OR          shift, and go to state 38
    PLUS        shift, and go to state 39

    BITWISEAND  [reduce using rule 12 (expr)]
    BITWISEOR   [reduce using rule 12 (expr)]
    BITWISEXOR  [reduce using rule 12 (expr)]
    AND         [reduce using rule 12 (expr)]
    ASSIGN      [reduce using rule 12 (expr)]
    MUL         [reduce using rule 12 (expr)]
    COMMA       [reduce using rule 12 (expr)]
    DIV         [reduce using rule 12 (expr)]
    EQ          [reduce using rule 12 (expr)]
    GE          [reduce using rule 12 (expr)]
    GT          [reduce using rule 12 (expr)]
    LE          [reduce using rule 12 (expr)]
    LT          [reduce using rule 12 (expr)]
    MINUS       [reduce using rule 12 (expr)]
    MOD         [reduce using rule 12 (expr)]
    NE          [reduce using rule 12 (expr)]
    OR          [reduce using rule 12 (expr)]
    PLUS        [reduce using rule 12 (expr)]
    $default    reduce using rule 12 (expr)

    expr_assignments  go to state 40
    expr_math         go to state 41
    expr_logic        go to state 42
    expr_compare      go to state 43


State 45

   43 expr_values: LPAR expr RPAR .

    $default  reduce using rule 43 (expr_values)


State 46

   13 expr: ID LPAR RPAR .

    $default  reduce using rule 13 (expr)


State 47

    8 expr: expr . expr_assignments expr
    9     | expr . expr_math expr
   10     | expr . expr_logic expr
   11     | expr . expr_compare expr
   14     | ID LPAR expr . expr_arguments RPAR

    BITWISEAND  shift, and go to state 22
    BITWISEOR   shift, and go to state 23
    BITWISEXOR  shift, and go to state 24
    AND         shift, and go to state 25
    ASSIGN      shift, and go to state 26
    MUL         shift, and go to state 27
    COMMA       shift, and go to state 52
    DIV         shift, and go to state 29
    EQ          shift, and go to state 30
    GE          shift, and go to state 31
    GT          shift, and go to state 32
    LE          shift, and go to state 33
    LT          shift, and go to state 34
    MINUS       shift, and go to state 35
    MOD         shift, and go to state 36
    NE          shift, and go to state 37
    OR          shift, and go to state 38
    PLUS        shift, and go to state 39

    $default  reduce using rule 38 (expr_arguments)

    expr_assignments  go to state 40
    expr_math         go to state 41
    expr_logic        go to state 42
    expr_compare      go to state 43
    expr_arguments    go to state 53


State 48

    8 expr: expr . expr_assignments expr
    8     | expr expr_assignments expr .
    9     | expr . expr_math expr
   10     | expr . expr_logic expr
   11     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 22
    BITWISEOR   shift, and go to state 23
    BITWISEXOR  shift, and go to state 24
    AND         shift, and go to state 25
    ASSIGN      shift, and go to state 26
    MUL         shift, and go to state 27
    COMMA       shift, and go to state 28
    DIV         shift, and go to state 29
    EQ          shift, and go to state 30
    GE          shift, and go to state 31
    GT          shift, and go to state 32
    LE          shift, and go to state 33
    LT          shift, and go to state 34
    MINUS       shift, and go to state 35
    MOD         shift, and go to state 36
    NE          shift, and go to state 37
    OR          shift, and go to state 38
    PLUS        shift, and go to state 39

    BITWISEAND  [reduce using rule 8 (expr)]
    BITWISEOR   [reduce using rule 8 (expr)]
    BITWISEXOR  [reduce using rule 8 (expr)]
    AND         [reduce using rule 8 (expr)]
    ASSIGN      [reduce using rule 8 (expr)]
    MUL         [reduce using rule 8 (expr)]
    COMMA       [reduce using rule 8 (expr)]
    DIV         [reduce using rule 8 (expr)]
    EQ          [reduce using rule 8 (expr)]
    GE          [reduce using rule 8 (expr)]
    GT          [reduce using rule 8 (expr)]
    LE          [reduce using rule 8 (expr)]
    LT          [reduce using rule 8 (expr)]
    MINUS       [reduce using rule 8 (expr)]
    MOD         [reduce using rule 8 (expr)]
    NE          [reduce using rule 8 (expr)]
    OR          [reduce using rule 8 (expr)]
    PLUS        [reduce using rule 8 (expr)]
    $default    reduce using rule 8 (expr)

    expr_assignments  go to state 40
    expr_math         go to state 41
    expr_logic        go to state 42
    expr_compare      go to state 43


State 49

    8 expr: expr . expr_assignments expr
    9     | expr . expr_math expr
    9     | expr expr_math expr .
   10     | expr . expr_logic expr
   11     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 22
    BITWISEOR   shift, and go to state 23
    BITWISEXOR  shift, and go to state 24
    AND         shift, and go to state 25
    ASSIGN      shift, and go to state 26
    MUL         shift, and go to state 27
    COMMA       shift, and go to state 28
    DIV         shift, and go to state 29
    EQ          shift, and go to state 30
    GE          shift, and go to state 31
    GT          shift, and go to state 32
    LE          shift, and go to state 33
    LT          shift, and go to state 34
    MINUS       shift, and go to state 35
    MOD         shift, and go to state 36
    NE          shift, and go to state 37
    OR          shift, and go to state 38
    PLUS        shift, and go to state 39

    BITWISEAND  [reduce using rule 9 (expr)]
    BITWISEOR   [reduce using rule 9 (expr)]
    BITWISEXOR  [reduce using rule 9 (expr)]
    AND         [reduce using rule 9 (expr)]
    ASSIGN      [reduce using rule 9 (expr)]
    MUL         [reduce using rule 9 (expr)]
    COMMA       [reduce using rule 9 (expr)]
    DIV         [reduce using rule 9 (expr)]
    EQ          [reduce using rule 9 (expr)]
    GE          [reduce using rule 9 (expr)]
    GT          [reduce using rule 9 (expr)]
    LE          [reduce using rule 9 (expr)]
    LT          [reduce using rule 9 (expr)]
    MINUS       [reduce using rule 9 (expr)]
    MOD         [reduce using rule 9 (expr)]
    NE          [reduce using rule 9 (expr)]
    OR          [reduce using rule 9 (expr)]
    PLUS        [reduce using rule 9 (expr)]
    $default    reduce using rule 9 (expr)

    expr_assignments  go to state 40
    expr_math         go to state 41
    expr_logic        go to state 42
    expr_compare      go to state 43


State 50

    8 expr: expr . expr_assignments expr
    9     | expr . expr_math expr
   10     | expr . expr_logic expr
   10     | expr expr_logic expr .
   11     | expr . expr_compare expr

    BITWISEAND  shift, and go to state 22
    BITWISEOR   shift, and go to state 23
    BITWISEXOR  shift, and go to state 24
    AND         shift, and go to state 25
    ASSIGN      shift, and go to state 26
    MUL         shift, and go to state 27
    COMMA       shift, and go to state 28
    DIV         shift, and go to state 29
    EQ          shift, and go to state 30
    GE          shift, and go to state 31
    GT          shift, and go to state 32
    LE          shift, and go to state 33
    LT          shift, and go to state 34
    MINUS       shift, and go to state 35
    MOD         shift, and go to state 36
    NE          shift, and go to state 37
    OR          shift, and go to state 38
    PLUS        shift, and go to state 39

    BITWISEAND  [reduce using rule 10 (expr)]
    BITWISEOR   [reduce using rule 10 (expr)]
    BITWISEXOR  [reduce using rule 10 (expr)]
    AND         [reduce using rule 10 (expr)]
    ASSIGN      [reduce using rule 10 (expr)]
    MUL         [reduce using rule 10 (expr)]
    COMMA       [reduce using rule 10 (expr)]
    DIV         [reduce using rule 10 (expr)]
    EQ          [reduce using rule 10 (expr)]
    GE          [reduce using rule 10 (expr)]
    GT          [reduce using rule 10 (expr)]
    LE          [reduce using rule 10 (expr)]
    LT          [reduce using rule 10 (expr)]
    MINUS       [reduce using rule 10 (expr)]
    MOD         [reduce using rule 10 (expr)]
    NE          [reduce using rule 10 (expr)]
    OR          [reduce using rule 10 (expr)]
    PLUS        [reduce using rule 10 (expr)]
    $default    reduce using rule 10 (expr)

    expr_assignments  go to state 40
    expr_math         go to state 41
    expr_logic        go to state 42
    expr_compare      go to state 43


State 51

    8 expr: expr . expr_assignments expr
    9     | expr . expr_math expr
   10     | expr . expr_logic expr
   11     | expr . expr_compare expr
   11     | expr expr_compare expr .

    BITWISEAND  shift, and go to state 22
    BITWISEOR   shift, and go to state 23
    BITWISEXOR  shift, and go to state 24
    AND         shift, and go to state 25
    ASSIGN      shift, and go to state 26
    MUL         shift, and go to state 27
    COMMA       shift, and go to state 28
    DIV         shift, and go to state 29
    EQ          shift, and go to state 30
    GE          shift, and go to state 31
    GT          shift, and go to state 32
    LE          shift, and go to state 33
    LT          shift, and go to state 34
    MINUS       shift, and go to state 35
    MOD         shift, and go to state 36
    NE          shift, and go to state 37
    OR          shift, and go to state 38
    PLUS        shift, and go to state 39

    BITWISEAND  [reduce using rule 11 (expr)]
    BITWISEOR   [reduce using rule 11 (expr)]
    BITWISEXOR  [reduce using rule 11 (expr)]
    AND         [reduce using rule 11 (expr)]
    ASSIGN      [reduce using rule 11 (expr)]
    MUL         [reduce using rule 11 (expr)]
    COMMA       [reduce using rule 11 (expr)]
    DIV         [reduce using rule 11 (expr)]
    EQ          [reduce using rule 11 (expr)]
    GE          [reduce using rule 11 (expr)]
    GT          [reduce using rule 11 (expr)]
    LE          [reduce using rule 11 (expr)]
    LT          [reduce using rule 11 (expr)]
    MINUS       [reduce using rule 11 (expr)]
    MOD         [reduce using rule 11 (expr)]
    NE          [reduce using rule 11 (expr)]
    OR          [reduce using rule 11 (expr)]
    PLUS        [reduce using rule 11 (expr)]
    $default    reduce using rule 11 (expr)

    expr_assignments  go to state 40
    expr_math         go to state 41
    expr_logic        go to state 42
    expr_compare      go to state 43


State 52

   17 expr_assignments: COMMA .
   37 expr_arguments: COMMA . expr expr_arguments

    REALLIT  shift, and go to state 1
    INTLIT   shift, and go to state 2
    CHRLIT   shift, and go to state 3
    LPAR     shift, and go to state 9
    MINUS    shift, and go to state 10
    NOT      shift, and go to state 11
    PLUS     shift, and go to state 12
    ID       shift, and go to state 13

    REALLIT  [reduce using rule 17 (expr_assignments)]
    INTLIT   [reduce using rule 17 (expr_assignments)]
    CHRLIT   [reduce using rule 17 (expr_assignments)]
    LPAR     [reduce using rule 17 (expr_assignments)]
    MINUS    [reduce using rule 17 (expr_assignments)]
    NOT      [reduce using rule 17 (expr_assignments)]
    PLUS     [reduce using rule 17 (expr_assignments)]
    ID       [reduce using rule 17 (expr_assignments)]

    expr           go to state 54
    expr_modifier  go to state 17
    expr_values    go to state 18


State 53

   14 expr: ID LPAR expr expr_arguments . RPAR

    RPAR  shift, and go to state 55


State 54

    8 expr: expr . expr_assignments expr
    9     | expr . expr_math expr
   10     | expr . expr_logic expr
   11     | expr . expr_compare expr
   37 expr_arguments: COMMA expr . expr_arguments

    BITWISEAND  shift, and go to state 22
    BITWISEOR   shift, and go to state 23
    BITWISEXOR  shift, and go to state 24
    AND         shift, and go to state 25
    ASSIGN      shift, and go to state 26
    MUL         shift, and go to state 27
    COMMA       shift, and go to state 52
    DIV         shift, and go to state 29
    EQ          shift, and go to state 30
    GE          shift, and go to state 31
    GT          shift, and go to state 32
    LE          shift, and go to state 33
    LT          shift, and go to state 34
    MINUS       shift, and go to state 35
    MOD         shift, and go to state 36
    NE          shift, and go to state 37
    OR          shift, and go to state 38
    PLUS        shift, and go to state 39

    $default  reduce using rule 38 (expr_arguments)

    expr_assignments  go to state 40
    expr_math         go to state 41
    expr_logic        go to state 42
    expr_compare      go to state 43
    expr_arguments    go to state 56


State 55

   14 expr: ID LPAR expr expr_arguments RPAR .

    $default  reduce using rule 14 (expr)


State 56

   37 expr_arguments: COMMA expr expr_arguments .

    $default  reduce using rule 37 (expr_arguments)
